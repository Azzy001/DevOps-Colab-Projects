name: Pipeline

# Define events that trigger the workflow
on:
  pull_request:
    # Trigger on pull requests to any branch
    branches:
      - "*"  
  push:
    branches:
      # Trigger on pushes to the main branch
      - main

# Set top-level permissions
permissions:
  contents: read
  packages: read

# Define the workflow jobs
jobs:
  job-1:
    name: "Job 1: Check Commit Convention"
    runs-on: ubuntu-latest
    steps:
      # Action to checkout the repository
      - uses: actions/checkout@v4
        with:
          # Provides access to the repository with a secret token
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          # Fetches the entire commit history
          fetch-depth: 0
        # Action to check commit conventions
      - name: Conventional Commits Checker
        # Sets an identifier for this action step
        id: commits-check
        uses: netodevel/convetional-commits-checker@v1.0.1
        with:
          # Required: Specifies the base branch of the pull request
          target-branch: ${{ github.event.pull_request.base.ref }}
          # Required: Specifies the current branch of the pull request
          current-branch: ${{ github.event.pull_request.head.ref }}
          # Optional: Custom validation pattern for commit messages
          pattern: '(feat|fix|ci|chore|docs|test|style|refactor): #[0-9]+ - .{1,}$'

  job-2:
    name: "Job 2: Run Checkout"
    # Run after job 1 is convention checks is complete
    needs: job-1
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch the entire history
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          # Specify Node.js version
          node-version: "14.x"
          # Cache npm dependencies
          cache: "npm"
      - name: Install dependencies
        # Install project dependencies
        run: npm install

  job-3:
    name: "Job 3: Run Security Scan"
    # Run after checkout job completes
    needs: job-2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Fetch the entire history
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          # Use repository token for authentication
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
          # Enable summary in the output
          GITLEAKS_ENABLE_SUMMARY: true

  job-4:
    name: "Job 4: Run Code Lint"
    # Run after security check job completes
    needs: job-3
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      # Allow updating statuses
      statuses: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch the entire history
          fetch-depth: 0
      - name: Super-linter
        uses: super-linter/super-linter@v6.6.0
        env:
          # Use repository token for authentication
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

  job-5:
    name: "Job 5: Check Dependencies"
    # Run after linting job completes
    needs: job-4
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          # Specify Node.js version
          node-version: "14.x"
        # Install clean dependencies
      - run: npm ci
      - name: Run outdated check
        # Check for outdated dependencies
        uses: odanado/outdated-check-action@v0

  job-6:
    name: "Job 6: Generate Changelog"
    runs-on: ubuntu-latest
    # Run after dependency check job completes
    needs: job-5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch the entire history
          fetch-depth: 0
      - name: Generate changelog
        run: |
          # Generate changelog from git log
          git log --pretty=format:"* %h - %an, %ar : %s" > CHANGELOG.md
          cat CHANGELOG.md  # Output the changelog
