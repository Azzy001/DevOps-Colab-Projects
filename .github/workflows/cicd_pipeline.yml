# Define the name of the CI/CD pipeline
name: cicd pipeline

# Events that trigger this pipeline
on:
  pull_request:
    branches:
      # Trigger on all branches for pull requests
      - '*'
  push:
    branches:
      # Trigger on push events to the 'main' branch
      - main 

# Jobs section
jobs:
  # Job 1: Checkout repository and setup Node.js
  run-checkout:
    runs-on: ubuntu-latest
    steps:
      # Step: Checkout repository with full history
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch entire history

      # Step: Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14.x'
          cache: 'npm'  # Cache npm dependencies for faster builds

      # Step: Install npm dependencies
      - name: Install dependencies
        run: npm install  

  # Job 2: Security checks using TruffleHog
  security-check-stage:
    needs: ['run-checkout']  # Depend on 'run-checkout' job to complete
    runs-on: ubuntu-latest
    steps:
      # Step: Checkout repository with full history for accurate scanning
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: './'

      # Step: Install TruffleHog for security scanning
      - name: Install TruffleHog
        run: |
          python -m pip install --upgrade pip
          pip install truffleHog

      # Step: Run TruffleHog security scan
      - name: TruffleHog scan
        uses: trufflesecurity/TruffleHog-Enterprise-Github-Action@main
        with:
          args: --fail-verified --debug ${{ github.event.repository.default_branch }} HEAD
          
  # Job 3: Generate changelog based on commit history
  run-changelog:
    runs-on: ubuntu-latest
    steps:
      # Step: Checkout repository with full history for accurate log generation
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step: Generate changelog from commit history
      - name: Generate changelog
        run: |
          git log --pretty=format:"* %h - %an, %ar : %s" > CHANGELOG.md
          cat CHANGELOG.md
